#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language dutch
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Inleiding
\end_layout

\begin_layout Standard
Een goede kwaliteit van het project is essentieel voor de TU Delft als ook
 voor TNO.
 Daarom zal dit hoofdstuk meer uitleggen over de geplande maatregelen om
 de kwaliteit zo hoog mogelijk te houden.
\end_layout

\begin_layout Subsection
De kwaliteit
\end_layout

\begin_layout Standard
De technische kwaliteit van het product is uitermate belangrijk gezien het
 resultaat van dit project moet aantonen dat wij onze bacheloropleiding
 Technische Informatica goed afgerond hebben.
 Om de kwaliteit te waarborgen kan gebruik gemaakt worden van verificatie
 en validatie.
 Deze verificatie en validatie bewerkstelligen wij door middel van vier
 onderdelen.
 Ten eerste zullen wij uitleggen wat de documentatie bevat.
 Vervolgens zal het gebruik van een versiebeheersysteem beschreven worden.
 Ten derde volgt hoe het project geëvalueerd zal worden.
 Ten slot zijn de pilots uitgelicht.
\end_layout

\begin_layout Subsubsection
Documentatie
\end_layout

\begin_layout Standard
Om een verifieerbaar goed product te hebben is het belangrijk om alle uitgevoerd
e stappen goed te documenteren.
 Hiermee is het achteraf mogelijk om te zien of alles zoals vooraf bepaald
 juist gedaan is.
 Verder zorgt dit ervoor dat buitenstaanders snel kunnen begrijpen wat wij
 gedaan hebben en hoezo dit gedaan is.
\end_layout

\begin_layout Standard
In de documentatie leggen wij dus alle gemaakte keuzes en gemaakte aannames
 vast met goede argumentatie hierover.
 Verder bevat de documentatie de planning van het project met uitleg over
 het wel of niet behalen van gestelde doelen.
 Tot slot bevat de documentatie uitleg over de geschreven programmeercode.
\end_layout

\begin_layout Subsubsection
Versiebeheer
\end_layout

\begin_layout Standard
Tijdens dit project zal er veel programmeercode geschreven worden.
 Met meerdere mensen aan een snel veranderend project werken kan soms onhandig
 worden en daarom maken wij gebruik van het versiebeheersysteem Git (specifiek
 de aangeboden versie van Github) om de samenwerking te vereenvoudigen.
\end_layout

\begin_layout Standard
Om te garanderen dat er altijd een werkend product is zal er alleen compilerende
 code naar de server overgezet worden.
 Alvorens de code naar de hoofd-branche overgezet wordt moeten er op zijn
 minst automatische unit-tests geschreven worden die volledige dekking hebben.
 Verder moet de code door minstens één ander teamlid geëvalueerd worden.
\end_layout

\begin_layout Standard
Nieuwe features zullen in aparte branches geïmplementeerd worden (per feature
 een nieuwe branche) om negatieve invloed van nieuwe, niet helemaal werkende
 onderdelen, op het project te beperken.
\end_layout

\begin_layout Subsubsection
Evaluatie
\end_layout

\begin_layout Standard
De code zal altijd getest moeten worden op volledige werking zoals in de
 planning overeengekomen.
 Hierdoor zal het project altijd naar verwachting werken en daarmee zo als
 gewenst.
\end_layout

\begin_layout Standard
Als niet alles naar behoren werkt kan door middel van de documentatie gekeken
 worden waar het fout ging en met het versiebeheer terug gegaan worden naar
 een versie die wel nog werkte.
 Deze manier helpt te garanderen dat er ten allen tijden een werkend product
 aanwezig is.
 Ook zal er tweemaal de volledige code evaluatie worden uitgevoerd door
 een externe partij Software Improvement Group (SIG).
\end_layout

\begin_layout Standard
Samen met de de documentatie en het versiebeheer zal hier het product dus
 geverifieerd kunnen worden.
\end_layout

\begin_layout Subsubsection
De pilots
\end_layout

\begin_layout Standard
Doordat wij als softwareontwikkelmethode Scrum gebruiken zal er na elke
 sprint een werkend product zijn.
 Hierdoor is het theoretisch mogelijk om elke week een testversie beschikbaar
 te hebben.
 Doordat wij voornamelijk een library maken, die voor eindgebruikers niet
 heel interessant is zal het in het begin niet handig zijn om gebruikers
 van buiten af het product te laten testen.
\end_layout

\begin_layout Standard
Naast de library ontwikkelen wij ook een game die de library benut.
 Naarmate de ontwikkeling van deze game verder vordert zal het wel mogelijk
 zijn dit voor te leggen aan anderen om alvast een voorproefje van het finale
 product te krijgen.
 Hoe dit verder uit gaat zien hebben, is nog niet besloten.
 Daarom is het nog niet mogelijk om specifiek een sprint aan te geven vanaf
 wanneer het voor buitenstaanders interessant kan zijn.
\end_layout

\begin_layout Standard
Zodra dit mogelijk is, zal het voor ons belangrijk zijn dat vooral de functional
iteit van de library geïmplementeerd in het spel werkt en zal er bij de
 pilot(s) dus geen nadruk liggen op speltechnische aspecten (hoe 
\begin_inset Quotes eld
\end_inset

leuk
\begin_inset Quotes erd
\end_inset

 het bevonden wordt) gezien ons hoofddoel een werkende library is en niet
 een spel op zich ontwikkelen.
 Deze pilots zijn nuttig voor ons ontwikkeltraject om zo in een echt scenario
 fouten te kunnen opsporen waar wij niet aan gedacht hebben.
 Denk hierbij aan specifieke achtereenvolgende invoer die het vastlopen
 van de library ten gevolg heeft, maar in een andere volgorde niet.
\end_layout

\begin_layout Standard
Deze pilots vormen de validatie van het product.
\end_layout

\end_body
\end_document
